# -*- coding: utf-8 -*-                                                        

import os
import sys
sys.path.append('/data/project/phetools/phe/common')
import pywikibot_utils

def gen_ws_category(langs):
    text  = u'# -*- coding: utf-8 -*-\n'
    text += u'# auto-generated by %s, do not edit manually.\n\n' % sys.argv[0]

    # yes, old is very special...
    text += u"""\
domain_urls = {
    'old': (
        104,
        "Proofread",
        "Validated",
        "Without_text",
        "Problematic",
        ),
"""

    for lang in langs:
        pfi = pywikibot_utils.proofread_info(lang)
        format_dict = {}
        format_dict['code'] = lang
        pfns = pfi['proofreadnamespaces']
        format_dict['page_ns'] = pfns['page']['id']
        levels = pfi['proofreadqualitylevels']
        pfns = pfi['proofreadnamespaces']
        # FIXME: it'll better to generate a dictionnary rather than a list
        # but we need to fix all namespace first.
        for level in levels:
            cat = level['category'].replace(u' ', u'_')
            if level['id'] == 0:
                format_dict['Without_text'] = cat
            elif level['id'] == 1:
                format_dict['Not_proofread'] = cat
            elif level['id'] == 2:
                format_dict['Problematic'] = cat
            elif level['id'] == 3:
                format_dict['Proofread'] = cat
            elif level['id'] == 4:
                format_dict['Validated'] = cat

        text += u"""\
    '%(code)s': (
        %(page_ns)d,
        "%(Proofread)s",
        "%(Validated)s",
        "%(Without_text)s",
        "%(Problematic)s",
        ),
""" % format_dict


    text += u"}\n"

    return text


if __name__ == "__main__":
    langs = pywikibot_utils.get_all_lang('wikisource')
    text = gen_ws_category(langs)

    #print text.encode('utf-8')
    target = '/data/project/phetools/wikisource/ws_category.py'
    old_text = ''
    if os.path.exists(target):
        fd = open(target, 'r')
        old_text = fd.read()
        fd.close()
    if unicode(old_text, 'utf-8') != text:
        print "writing file, no server needs a restart"
        fd = open(target, 'w')
        fd.write(text.encode('utf-8'))
        fd.close()
